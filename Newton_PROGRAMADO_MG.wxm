/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 22.04.0 ] */
/* [wxMaxima: title   start ]
	Método de Newton-Raphson
   [wxMaxima: title   end   ] */


/* [wxMaxima: comment start ]
Función programada con pasos detallados.
Versión: g.1.1 (Con variables y funciones globales)

Desarrollada y probada en:
wxMaxima 19.05.x  
maxima 5.43
NO SE GARANTIZA EL CORRECTO FUNCIONAMIENTO EN OTRAS VERSIONES, INCLUYENDO EL CÁLCULO Y LA VISUALIZACIÓN DE RESULTADOS.

Autor: Marcelo Guiguet
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
reset(); 
kill(all);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
	Implementación
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
er(x):= abs((p[x]-p[x-1])/(p[x]))*100;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
newton(_f,_p,e,[op]):=(
    kill(p), /* Se borra la lista de puntos p */
    _maxIter:0,
    _forceStep:0,
    if length(op) >= 1 then (
        if op[1] > 0 then (
            _maxIter:op[1],
            print("Pasos maximos configurados:",_maxIter)
        )
        else (
            _maxIter:0,
            print("Pasos maximos configurados: sin límite")
        ),
        if length(op) >= 2 then (
            if op[2] > 0 then (
                _forceStep:op[2],
                print("Se itera hasta al menos el paso:",_forceStep,"(Se ignora una cantidad maxima de pasos inferior a este valor)")
            )
        )
    ),
    paso:0,
    p[0]:float(_p),
    define(_f1(x),diff(_f(x),x,1)), /* o _f1(x):= ''diff(_f(x)) */
    print("Función f(x):",_f(x)),
    print("Función f ' (x):",_f1(x)),
    print(p_[0],"=",p[0]),
    printf(false,"Error buscado menor al ~,2f%",e),
    if notequal(_f(p[0]),0) then /* or true para desactivar esto */
    for i:1 step 1 while if i = 1 or i <= _forceStep then true else (if _maxIter > 0 then i <= _maxIter and er(i-1) > e else er(i-1) > e ) do (
        paso:paso+1,
        p[i]:p[i-1]-float((_f(p[i-1])/_f1(p[i-1]))),
        print("--------------------------------------"),
        print("Paso:",paso),
        print(""),
        print(p_[n-1],"=",p_[i-1],"=",p[i-1]),
        display(p[i], abs(ε_a[i])=er(i))
    )
    else print("El",p_0,"ingresado es la raiz exacta."),
    p[paso]
)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
	Ejemplo
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
f(x):= x**10-100;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
newton(f,1.5,1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
	Implementación de maxima
   [wxMaxima: subsect end   ] */


/* [wxMaxima: comment start ]
Si se ejecuta esto se sobreescribe la función anterior
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
load(newton1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
newton(f(x),x,1.5,1);
/* [wxMaxima: input   end   ] */



/* Old versions of Maxima abort on loading files that end in a comment. */
"Created with wxMaxima 22.04.0"$
